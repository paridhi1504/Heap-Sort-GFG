class Solution
{
    public:
    //Heapify function to maintain heap property.
    void heapify(int maxHeap[], int n, int i)  
    {
      // Your Code Here
      int largest = i;
      int left = 2*i+1;
      int right = 2*i+2;
      
      if(left<n && maxHeap[left]>maxHeap[largest])
      largest = left;
      
      if(right<n && maxHeap[right]>maxHeap[largest])
      largest = right;
      
      if(largest != i)
      {
          swap(maxHeap[largest],maxHeap[i]);
          heapify(maxHeap,n,largest);
      }
    }

    public:
    //Function to build a Heap from array.
    void buildHeap(int arr[], int n)  
    { 
    // Your Code Here
    }

    
    public:
    //Function to sort an array using Heap Sort.
    void heapSort(int arr[], int n)
    {
        //code here
        //First Create max heap
        for(int i=n/2-1; i>=0; i--)
        {
            heapify(arr,n,i);
        }
        for(int i = n-1; i>=0; i--)
        {
            swap(arr[i],arr[0]);
            heapify(arr,i,0);
        }
    }
};

